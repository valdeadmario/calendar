{"version":3,"sources":["actions/event.actions.js","components/Calendar/index.jsx","containers/CalendarContainer/index.jsx","components/Modal/index.jsx","hooks/useOuterClick.jsx","containers/ModalContainer/index.jsx","reducers/events.js","reducers/index.js","containers/App/index.jsx","index.js"],"names":["updateEvent","id","body","type","payload","Calendar","handleDateClick","handleEventClick","handleDrop","calendarEvents","calendarComponentRef","useRef","className","eventLimit","customButtons","agenda","theme","text","click","alert","buttonText","today","month","week","day","next","prev","defaultView","header","left","center","right","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","editable","droppable","eventDrop","ref","weekends","displayEventTime","events","dateClick","eventClick","nowIndicator","slotDuration","slotLabelFormat","hour","minute","meridiem","CalendarContainer","setPositions","setOpenModal","setEvent","dispatch","useDispatch","useSelector","state","arg","x","jsEvent","pageX","y","pageY","date","stopPropagation","currentEvent","find","item","event","start","Modal","positions","created","selectedEvent","close","handleDiscard","handleSubmit","useState","title","color","setState","useEffect","modalRef","callback","innerRef","callbackRef","current","document","addEventListener","handleClick","removeEventListener","e","contains","target","indexOf","useOuterClick","style","top","onClick","htmlFor","value","name","onChange","length","selected","timeInputLabel","dateFormat","showTimeInput","width","circleSize","circleSpacing","hex","ModalContainer","ID","initialState","Date","notes","action","map","filter","combineReducers","store","createStore","rootReducer","App","showModal","setShowModal","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3402fc28.chunk.js","sourcesContent":["export const ADD_EVENT = \"ADD_EVENT\";\r\nexport const UPDATE_EVENT = \"UPDATE_EVENT\";\r\nexport const DELETE_EVENT = \"DELETE_EVENT\";\r\n\r\nexport const addEvent = (payload) => ({\r\n  type: ADD_EVENT,\r\n  payload,\r\n});\r\n\r\nexport const updateEvent = (id, body) => ({\r\n  type: UPDATE_EVENT,\r\n  payload: { body, id },\r\n});\r\n\r\nexport const deleteEvent = (id) => ({\r\n  type: DELETE_EVENT,\r\n  payload: id,\r\n});\r\n","import React, { useRef } from \"react\";\r\n\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\n\r\nimport \"./main.scss\";\r\n\r\nexport const Calendar = ({\r\n  handleDateClick,\r\n  handleEventClick,\r\n  handleDrop,\r\n  calendarEvents,\r\n}) => {\r\n  const calendarComponentRef = useRef();\r\n\r\n  return (\r\n    <div className=\"page-wrap\">\r\n      <div className=\"container\">\r\n        <h1 className=\"page-title\">Calendar</h1>\r\n        <div className=\"calendar\">\r\n          <h2>Calendar View</h2>\r\n          <div className=\"calendar-calendar\">\r\n            <FullCalendar\r\n              eventLimit={3}\r\n              customButtons={{\r\n                agenda: {\r\n                  theme: \"true\",\r\n                  text: \"Agenda\",\r\n                  click: function () {\r\n                    alert(\"clicked the agenda!\");\r\n                  },\r\n                },\r\n              }}\r\n              buttonText={{\r\n                today: \"Today\",\r\n                month: \"Month\",\r\n                week: \"Week\",\r\n                day: \"Day\",\r\n                next: \"Next\",\r\n                prev: \"Back\",\r\n              }}\r\n              defaultView=\"dayGridMonth\"\r\n              header={{\r\n                left: \"today,prev,next\",\r\n                center: \"title\",\r\n                right: \"dayGridMonth,timeGridWeek,timeGridDay,agenda\",\r\n              }}\r\n              plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n              editable={true}\r\n              droppable={true}\r\n              eventDrop={handleDrop}\r\n              ref={calendarComponentRef}\r\n              weekends={true}\r\n              displayEventTime={false}\r\n              events={calendarEvents}\r\n              dateClick={handleDateClick}\r\n              eventClick={handleEventClick}\r\n              nowIndicator={true}\r\n              slotDuration={\"01:00:00\"}\r\n              slotLabelFormat={{\r\n                hour: \"numeric\",\r\n                minute: \"2-digit\",\r\n                meridiem: \"long\",\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { updateEvent } from \"actions/event.actions\";\r\n\r\nimport { Calendar } from \"components/Calendar\";\r\n\r\nexport const CalendarContainer = ({ setPositions, setOpenModal, setEvent }) => {\r\n  const dispatch = useDispatch();\r\n  const calendarEvents = useSelector((state) => state.events);\r\n\r\n  const moveEvent = ({ event }) => {\r\n    dispatch(updateEvent(event.id, { start: event.start }));\r\n  };\r\n\r\n  const handleDateClick = (arg) => {\r\n    setPositions({\r\n      x: arg.jsEvent.pageX,\r\n      y: arg.jsEvent.pageY,\r\n      date: arg.date,\r\n    });\r\n    setOpenModal(\"save\");\r\n  };\r\n\r\n  const handleEventClick = (arg) => {\r\n    arg.jsEvent.stopPropagation();\r\n    const currentEvent = calendarEvents.find(\r\n      (item) => item.id === +arg.event.id\r\n    );\r\n    setPositions({ x: arg.jsEvent.pageX, y: arg.jsEvent.pageY });\r\n    setEvent(currentEvent);\r\n    setOpenModal(\"created\");\r\n  };\r\n\r\n  return (\r\n    <Calendar\r\n      handleDateClick={handleDateClick}\r\n      handleEventClick={handleEventClick}\r\n      handleDrop={moveEvent}\r\n      calendarEvents={calendarEvents}\r\n    />\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { CirclePicker } from \"react-color\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport { useOuterClick } from \"hooks/useOuterClick\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"./main.scss\";\r\n\r\nexport const Modal = ({\r\n  positions: { x, y, date },\r\n  created,\r\n  selectedEvent,\r\n  close,\r\n  handleDiscard,\r\n  handleSubmit,\r\n}) => {\r\n  const [state, setState] = useState({\r\n    title: (selectedEvent && selectedEvent.title) || \"\",\r\n    start: (selectedEvent && selectedEvent.start) || date,\r\n    color: (selectedEvent && selectedEvent.color) || \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (selectedEvent) {\r\n      setState({\r\n        title: (selectedEvent && selectedEvent.title) || \"\",\r\n        start: (selectedEvent && selectedEvent.start) || date,\r\n        color: (selectedEvent && selectedEvent.color) || \"\",\r\n      });\r\n    }\r\n  }, [selectedEvent, date]);\r\n\r\n  const modalRef = useOuterClick((e) => {\r\n    close();\r\n  });\r\n\r\n  return (\r\n    <div\r\n      ref={modalRef}\r\n      className=\"modal\"\r\n      style={{ top: y + 15, left: x - 128 }}\r\n    >\r\n      <span className=\"top-bot\"></span>\r\n      <button onClick={close} className=\"modal-close\"></button>\r\n      <div className=\"modal-body\">\r\n        <div>\r\n          <label className=\"modal-label\" htmlFor=\"name\">\r\n            event name\r\n          </label>\r\n          <input\r\n            id=\"name\"\r\n            type=\"text\"\r\n            className=\"modal-input\"\r\n            value={state.title}\r\n            name=\"title\"\r\n            onChange={(e) =>\r\n              e.target.value.length <= 30 &&\r\n              setState({ ...state, title: e.target.value })\r\n            }\r\n          />\r\n        </div>\r\n        <div>\r\n          <label className=\"modal-label\" htmlFor=\"name\">\r\n            event date and time\r\n          </label>\r\n          <DatePicker\r\n            className=\"modal-input time\"\r\n            selected={state.start}\r\n            onChange={(date) => setState({ ...state, start: date })}\r\n            timeInputLabel=\"Time:\"\r\n            dateFormat=\"MM/dd/yyyy h:mm aa\"\r\n            showTimeInput\r\n          />\r\n        </div>\r\n        <CirclePicker\r\n          className=\"modal-color-picker\"\r\n          width={\"100%\"}\r\n          circleSize={18}\r\n          circleSpacing={10}\r\n          color={state.color}\r\n          onChange={(color) => setState({ ...state, color: color.hex })}\r\n        />\r\n\r\n        <div className=\"buttons\">\r\n          <button className=\"red\" onClick={created ? handleDiscard : close}>\r\n            {created ? \"Discard\" : \"Cancel\"}\r\n          </button>\r\n          <button onClick={() => handleSubmit(state)}>\r\n            {created ? \"Edit\" : \"Save\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport const useOuterClick = (callback) => {\r\n  const innerRef = useRef();\r\n  const callbackRef = useRef();\r\n\r\n  useEffect(() => {\r\n    callbackRef.current = callback;\r\n  });\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClick);\r\n    return () => document.removeEventListener(\"click\", handleClick);\r\n\r\n    function handleClick(e) {\r\n      if (\r\n        innerRef.current &&\r\n        callbackRef.current &&\r\n        !innerRef.current.contains(e.target) &&\r\n        !~e.target.className.indexOf(\"react-datepicker\")\r\n      ) {\r\n        callbackRef.current(e);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return innerRef;\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { addEvent, updateEvent, deleteEvent } from \"actions/event.actions\";\r\n\r\nimport { Modal } from \"components/Modal\";\r\n\r\nexport const ModalContainer = ({\r\n  positions,\r\n  created,\r\n  selectedEvent,\r\n  close,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const handleSubmit = (state) => {\r\n    dispatch(!created ? addEvent(state) : updateEvent(selectedEvent.id, state));\r\n    close();\r\n  };\r\n\r\n  const handleDiscard = () => {\r\n    dispatch(deleteEvent(selectedEvent.id));\r\n    close();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      created={created}\r\n      positions={positions}\r\n      selectedEvent={selectedEvent}\r\n      close={close}\r\n      handleDiscard={handleDiscard}\r\n      handleSubmit={handleSubmit}\r\n    />\r\n  );\r\n};\r\n","import { ADD_EVENT, UPDATE_EVENT, DELETE_EVENT } from \"actions/event.actions\";\r\n\r\nlet ID = 100;\r\n\r\nconst initialState = [\r\n  {\r\n    id: 0,\r\n    title: \"Lets begin\",\r\n    start: new Date(),\r\n    notes: \"\",\r\n    color: \"#9c27b0\",\r\n  },\r\n  { id: 1, title: \"Lets begin\", start: new Date(), notes: \"\" },\r\n];\r\n\r\nconst events = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_EVENT:\r\n      return [\r\n        ...state,\r\n        {\r\n          id: ID++,\r\n          ...action.payload,\r\n        },\r\n      ];\r\n\r\n    case UPDATE_EVENT:\r\n      return state.map((event) =>\r\n        event.id === +action.payload.id\r\n          ? { ...event, ...action.payload.body }\r\n          : event\r\n      );\r\n\r\n    case DELETE_EVENT:\r\n      return state.filter((event) => event.id !== action.payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default events;\r\n","import { combineReducers } from \"redux\";\r\nimport events from \"./events\";\r\n\r\nexport default combineReducers({\r\n  events,\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport { CalendarContainer } from \"containers/CalendarContainer\";\r\nimport { ModalContainer } from \"containers/ModalContainer\";\r\n\r\nimport rootReducer from \"reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport const App = () => {\r\n  const [positions, setPositions] = useState({ x: 0, y: 0, date: new Date() });\r\n  const [showModal, setShowModal] = useState(\"\");\r\n  const [selectedEvent, setEvent] = useState(null);\r\n  return (\r\n    <Provider store={store}>\r\n      {showModal && (\r\n        <ModalContainer\r\n          close={() => {\r\n            setEvent(null);\r\n            setShowModal(\"\");\r\n          }}\r\n          positions={positions}\r\n          created={showModal === \"created\"}\r\n          selectedEvent={selectedEvent}\r\n        />\r\n      )}\r\n      <CalendarContainer\r\n        setPositions={setPositions}\r\n        setOpenModal={setShowModal}\r\n        setEvent={setEvent}\r\n      />\r\n    </Provider>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"containers/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}